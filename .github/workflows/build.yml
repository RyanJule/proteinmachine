name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest'
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        
    - name: Install dependencies on Windows and macOS
      if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable on Windows and macOS
      if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --name=proteinscraper proteinscraper.py

    - name: Set up Docker container for Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace ubuntu:20.04 /bin/bash -c "
        apt-get update &&
        apt-get install -y python3 python3-pip &&
        python3 -m pip install --upgrade pip &&
        pip3 install -r requirements.txt &&
        pip3 install pyinstaller &&
        pyinstaller --onefile --name=proteinscraper proteinscraper.py"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: proteinscraper-${{ matrix.os }}
        path: dist/proteinscraper*
